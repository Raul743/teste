{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/raul/Documentos/projctos/projectos_Snir/teste/client/components/Fields/Input/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Input, FormGroup, Label } from 'reactstrap';\nimport { useField, ErrorMessage } from 'formik';\nimport '../../../../styles/Home.module.css';\n\nvar TextInput = function TextInput(_ref) {\n  _s();\n\n  var type = _ref.type,\n      label = _ref.label,\n      icon = _ref.icon,\n      name = _ref.name,\n      value = _ref.value,\n      placeholder = _ref.placeholder,\n      data = _ref.data;\n\n  var _useField = useField(name),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  if (!name) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"errorLabel\",\n      children: \"Esperava receber um \\\"name\\\"!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    className: \"mb-4\",\n    children: type !== 'select' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n        type: type,\n        id: \"exampleEmail\",\n        placeholder: placeholder,\n        className: \"\".concat((meta === null || meta === void 0 ? void 0 : meta.touched) && (meta === null || meta === void 0 ? void 0 : meta.error) && 'is-invalid')\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: field.name,\n        component: \"div\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/client/components/Fields/Input/index.tsx"],"names":["Input","FormGroup","Label","useField","ErrorMessage","TextInput","type","label","icon","name","value","placeholder","data","field","meta","touched","error"],"mappings":";;;;;;;;;;;;;AACA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,QAAvC;AAEA,OAAO,oCAAP;;AAEA,IAAMC,SAAyB,GAAG,SAA5BA,SAA4B,OAA2D;AAAA;;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,KAAkD,QAAlDA,KAAkD;AAAA,MAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACrET,QAAQ,CAACM,IAAD,CAD6D;AAAA;AAAA,MACpFI,KADoF;AAAA,MAC7EC,IAD6E;;AAG3F,MAAI,CAACL,IAAL,EAAW;AACT,wBAAO;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,cACGH,IAAI,KAAK,QAAT,gBACC;AAAA,8BACE,QAAC,KAAD;AAAA,kBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,KAAD,kCACMM,KADN;AAEE,QAAA,IAAI,EAAEP,IAFR;AAGE,QAAA,EAAE,EAAC,cAHL;AAIE,QAAA,WAAW,EAAEK,WAJf;AAKE,QAAA,SAAS,YAAK,CAAAG,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,OAAN,MAAiBD,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAEE,KAAvB,KAAgC,YAArC;AALX;AAAA;AAAA;AAAA;AAAA,eAFF,eASE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEH,KAAK,CAACJ,IAA1B;AAAgC,QAAA,SAAS,EAAC,KAA1C;AAAgD,QAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,eATF;AAAA,oBADD,gBAaC;AAdJ;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CA1BD;;GAAMJ,S;UACkBF,Q;;;KADlBE,S;AA4BN,eAAeA,SAAf","sourcesContent":["import { FC } from 'react';\nimport { Input, FormGroup, Label } from 'reactstrap';\nimport { useField, ErrorMessage } from 'formik';\nimport { inputProps } from '../types';\nimport '../../../../styles/Home.module.css';\n\nconst TextInput: FC<inputProps> = ({ type, label, icon, name, value, placeholder, data }) => {\n  const [field, meta] = useField(name);\n\n  if (!name) {\n    return <label className=\"errorLabel\">Esperava receber um \"name\"!</label>;\n  }\n\n  return (\n    <FormGroup className=\"mb-4\">\n      {type !== 'select' ? (\n        <>\n          <Label>{label}</Label>\n          <Input\n            {...field}\n            type={type}\n            id=\"exampleEmail\"\n            placeholder={placeholder}\n            className={`${meta?.touched && meta?.error && 'is-invalid'}`}\n          />\n          <ErrorMessage name={field.name} component=\"div\" className=\"error\" />\n        </>\n      ) : (\n        <></>\n      )}\n    </FormGroup>\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}