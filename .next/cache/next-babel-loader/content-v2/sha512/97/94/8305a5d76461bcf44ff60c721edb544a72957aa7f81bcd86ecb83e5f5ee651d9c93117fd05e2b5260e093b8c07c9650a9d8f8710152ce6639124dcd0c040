{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/input.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport { FormGroup, UncontrolledTooltip, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport { useField } from \"@unform/core\";\nexport default function _Input(_ref) {\n  let {\n    name,\n    isrequired,\n    noDefaultInputClass,\n    classNameForInputGroup\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"isrequired\", \"noDefaultInputClass\", \"classNameForInputGroup\"]);\n\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    defaultValue,\n    error,\n    clearError\n  } = useField(name);\n  const {\n    0: status,\n    1: setStatus\n  } = useState({\n    bool: \"\"\n  });\n  const defaultInfo = \"Teste22\" || name;\n  const ID = Math.random() + name;\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\"\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-control-label\",\n      htmlFor: ID || name,\n      children: [rest.title, \" \", isrequired && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [rest.info && /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n        delay: 0,\n        placement: \"auto\",\n        target: inputRef,\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: rest.info ? rest.info : defaultInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), rest.iconleft && /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n        delay: 0,\n        placement: \"auto\",\n        target: inputRef,\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: rest.info ? rest.info : defaultInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: classnames(\"input-group-merge\", classNameForInputGroup, {\n          focused: status.bool\n        }),\n        children: [rest.iconleft && /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n          id: ID,\n          className: \"inp\",\n          addonType: \"prepend\",\n          onClick: rest.hasOwnProperty(\"onlefticonclick\") ? rest.onlefticonclick : () => {},\n          children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n            className: `${!noDefaultInputClass && \"form-control-sm\"}   ${error && \"form-error\"}` + \" cod-text\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: rest.iconleft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n          className: `form-control ${!noDefaultInputClass && \"form-control-sm\"}  ${error && \"form-error\"} cod-text`,\n          ref: inputRef,\n          defaultValue: defaultValue\n        }, rest), {}, {\n          onFocus: e => {\n            setStatus({\n              bool: \"true\"\n            });\n            if (!rest.hasOwnProperty(\"onFocus\")) return;\n            rest.onFocus(e);\n          },\n          onInput: clearError,\n          onBlur: e => {\n            setStatus({\n              bool: \"\"\n            });\n            if (!rest.hasOwnProperty(\"onBlur\")) return;\n            rest.onBlur(e);\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), rest.right && /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n          addonType: \"append\",\n          onClick: rest.hasOwnProperty(\"onRightIconClick\") ? rest.onRightClick : () => {},\n          children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n            style: {\n              cursor: \"pointer\"\n            },\n            className: `${!noDefaultInputClass && \"form-control-sm\"}  ${error && \"form-error\"}` // style={error && { borderColor: \"#f95e5e\" }}\n            ,\n            children: rest.right\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), \" \", rest.doubleoption && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n              style: {\n                cursor: \"pointer\"\n              },\n              className: `${!noDefaultInputClass && \"form-control-sm\"}   ${error && \"form-error\"}` // style={error && { borderColor: \"#f95e5e\" }}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: rest.doubleoption.first.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(InputGroupText, {\n              style: {\n                cursor: \"pointer\"\n              },\n              className: `${!noDefaultInputClass && \"form-control-sm\"} ${error && \"form-error\"}` // style={error && { borderColor: \"#f95e5e\" }}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: rest.doubleoption.second.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), rest.iconright && /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n          addonType: \"append\",\n          onClick: rest.hasOwnProperty(\"onRightIconClick\") ? rest.onRightIconClick : () => {},\n          children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n            style: {\n              cursor: \"pointer\"\n            },\n            className: `${!noDefaultInputClass && \"form-control-sm\"}   ${error && \"form-error\"}` // style={error && { borderColor: \"#f95e5e\" }}\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: rest.iconright\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), \" \", rest.doubleoption && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n              style: {\n                cursor: \"pointer\"\n              },\n              className: `${!noDefaultInputClass && \"form-control-sm\"} ${error && \"form-error\"}` // style={error && { borderColor: \"#f95e5e\" }}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: rest.doubleoption.first.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(InputGroupText, {\n              style: {\n                cursor: \"pointer\"\n              },\n              className: `${!noDefaultInputClass && \"form-control-sm\"} ${error && \"form-error\"}` // style={error && { borderColor: \"#f95e5e\" }}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: rest.doubleoption.second.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: \"#9f3a38\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/input.jsx"],"names":["React","useRef","useEffect","useState","classnames","FormGroup","UncontrolledTooltip","InputGroup","InputGroupAddon","InputGroupText","useField","_Input","name","isrequired","noDefaultInputClass","classNameForInputGroup","rest","inputRef","fieldName","registerField","defaultValue","error","clearError","status","setStatus","bool","defaultInfo","ID","Math","random","ref","current","path","title","info","iconleft","focused","hasOwnProperty","onlefticonclick","e","onFocus","onBlur","right","onRightClick","cursor","doubleoption","first","icon","second","iconright","onRightIconClick","color"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport {\n    FormGroup,\n    UncontrolledTooltip,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText\n} from \"reactstrap\";\n\nimport { useField } from \"@unform/core\";\n\nexport default function _Input({\n    name,\n    isrequired,\n    noDefaultInputClass,\n    classNameForInputGroup,\n    ...rest\n}) {\n    const inputRef = useRef(null);\n    const {\n        fieldName,\n        registerField,\n        defaultValue,\n        error,\n        clearError\n    } = useField(name);\n    const [status, setStatus] = useState({ bool: \"\" });\n    const defaultInfo = \"Teste22\" || name;\n    const ID = Math.random() + name;\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: \"value\"\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <>\n            <label className=\"form-control-label\" htmlFor={ID || name}>\n                {rest.title}{\" \"}\n                {isrequired && <small className=\"text-danger\">*</small>}\n            </label>\n            <FormGroup>\n                {rest.info && (\n                    <UncontrolledTooltip\n                        delay={0}\n                        placement=\"auto\"\n                        target={inputRef}\n                    >\n                        <small>{rest.info ? rest.info : defaultInfo}</small>\n                    </UncontrolledTooltip>\n                )}\n\n                {rest.iconleft && (\n                    <UncontrolledTooltip\n                        delay={0}\n                        placement=\"auto\"\n                        target={inputRef}\n                    >\n                        <small>{rest.info ? rest.info : defaultInfo}</small>\n                    </UncontrolledTooltip>\n                )}\n                <InputGroup\n                    className={classnames(\n                        \"input-group-merge\",\n                        classNameForInputGroup,\n                        {\n                            focused: status.bool\n                        }\n                    )}\n                >\n                    {rest.iconleft && (\n                        <InputGroupAddon\n                            id={ID}\n                            className=\"inp\"\n                            addonType=\"prepend\"\n                            onClick={\n                                rest.hasOwnProperty(\"onlefticonclick\")\n                                    ? rest.onlefticonclick\n                                    : () => {}\n                            }\n                        >\n                            <InputGroupText\n                                className={\n                                    `${!noDefaultInputClass &&\n                                        \"form-control-sm\"}   ${error &&\n                                        \"form-error\"}` + \" cod-text\"\n                                }\n                            >\n                                <i className={rest.iconleft} />\n                                {/* <InputGroupText className=\"form-control-sm\">\n                <i className={props.iconleft} />\n              </InputGroupText> */}\n                            </InputGroupText>\n                        </InputGroupAddon>\n                    )}\n\n                    <input\n                        className={`form-control ${!noDefaultInputClass &&\n                            \"form-control-sm\"}  ${error &&\n                            \"form-error\"} cod-text`}\n                        ref={inputRef}\n                        defaultValue={defaultValue}\n                        {...rest}\n                        onFocus={e => {\n                            setStatus({ bool: \"true\" });\n                            if (!rest.hasOwnProperty(\"onFocus\")) return;\n                            rest.onFocus(e);\n                        }}\n                        onInput={clearError}\n                        onBlur={e => {\n                            setStatus({ bool: \"\" });\n                            if (!rest.hasOwnProperty(\"onBlur\")) return;\n                            rest.onBlur(e);\n                        }}\n                    />\n                    {rest.right && (\n                        <InputGroupAddon\n                            addonType=\"append\"\n                            onClick={\n                                rest.hasOwnProperty(\"onRightIconClick\")\n                                    ? rest.onRightClick\n                                    : () => {}\n                            }\n                        >\n                            <InputGroupText\n                                style={{ cursor: \"pointer\" }}\n                                className={`${!noDefaultInputClass &&\n                                    \"form-control-sm\"}  ${error &&\n                                    \"form-error\"}`}\n                                // style={error && { borderColor: \"#f95e5e\" }}\n                            >\n                                {rest.right}\n                            </InputGroupText>{\" \"}\n                            {rest.doubleoption && (\n                                <>\n                                    <InputGroupText\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`${!noDefaultInputClass &&\n                                            \"form-control-sm\"}   ${error &&\n                                            \"form-error\"}`}\n                                        // style={error && { borderColor: \"#f95e5e\" }}\n                                    >\n                                        {/* {rest.iconright} */}\n                                        <i\n                                            className={\n                                                rest.doubleoption.first.icon\n                                            }\n                                        />\n                                    </InputGroupText>{\" \"}\n                                    <InputGroupText\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`${!noDefaultInputClass &&\n                                            \"form-control-sm\"} ${error &&\n                                            \"form-error\"}`}\n                                        // style={error && { borderColor: \"#f95e5e\" }}\n                                    >\n                                        {/* {rest.iconright} */}\n                                        <i\n                                            className={\n                                                rest.doubleoption.second.icon\n                                            }\n                                        />\n                                    </InputGroupText>\n                                </>\n                            )}\n                        </InputGroupAddon>\n                    )}\n                    {rest.iconright && (\n                        <InputGroupAddon\n                            addonType=\"append\"\n                            onClick={\n                                rest.hasOwnProperty(\"onRightIconClick\")\n                                    ? rest.onRightIconClick\n                                    : () => {}\n                            }\n                        >\n                            <InputGroupText\n                                style={{ cursor: \"pointer\" }}\n                                className={`${!noDefaultInputClass &&\n                                    \"form-control-sm\"}   ${error &&\n                                    \"form-error\"}`}\n                                // style={error && { borderColor: \"#f95e5e\" }}\n                            >\n                                <i className={rest.iconright} />\n                            </InputGroupText>{\" \"}\n                            {rest.doubleoption && (\n                                <>\n                                    <InputGroupText\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`${!noDefaultInputClass &&\n                                            \"form-control-sm\"} ${error &&\n                                            \"form-error\"}`}\n                                        // style={error && { borderColor: \"#f95e5e\" }}\n                                    >\n                                        {/* {rest.iconright} */}\n                                        <i\n                                            className={\n                                                rest.doubleoption.first.icon\n                                            }\n                                        />\n                                    </InputGroupText>{\" \"}\n                                    <InputGroupText\n                                        style={{ cursor: \"pointer\" }}\n                                        className={`${!noDefaultInputClass &&\n                                            \"form-control-sm\"} ${error &&\n                                            \"form-error\"}`}\n                                        // style={error && { borderColor: \"#f95e5e\" }}\n                                    >\n                                        {/* {rest.iconright} */}\n                                        <i\n                                            className={\n                                                rest.doubleoption.second.icon\n                                            }\n                                        />\n                                    </InputGroupText>\n                                </>\n                            )}\n                        </InputGroupAddon>\n                    )}\n                </InputGroup>\n                {error && <small style={{ color: \"#9f3a38\" }}>{error}</small>}\n            </FormGroup>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}