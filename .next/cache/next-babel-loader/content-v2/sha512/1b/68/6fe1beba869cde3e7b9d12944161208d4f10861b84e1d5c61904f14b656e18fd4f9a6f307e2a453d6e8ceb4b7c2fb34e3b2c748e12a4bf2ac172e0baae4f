{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raul/Documentos/projctos/projectos_Snir/teste/client/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport { get, map } from 'lodash'; //import { withTranslation } from \"react-i18next\"\n//i18n\n\nimport i18n from '../../../../i18n';\nimport languages from '../../../../common/languages';\n\nconst LanguageDropdown = () => {\n  // Declare a new state variable, which we'll call \"menu\"\n  const {\n    0: selectedLang,\n    1: setSelectedLang\n  } = useState('');\n  const {\n    0: menu,\n    1: setMenu\n  } = useState(false);\n  useEffect(() => {\n    const currentLanguage = localStorage.getItem('I18N_LANGUAGE');\n    setSelectedLang(currentLanguage);\n  }, []);\n\n  const changeLanguageAction = lang => {\n    //set language as i18n\n    i18n.changeLanguage(lang);\n    localStorage.setItem('I18N_LANGUAGE', lang);\n    setSelectedLang(lang);\n  };\n\n  const toggle = () => {\n    setMenu(!menu);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: menu,\n      toggle: toggle,\n      className: \"d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n        className: \"btn header-item waves-effect\",\n        tag: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: get(languages, `${selectedLang}.flag`),\n          alt: \"Skote\",\n          height: \"16\",\n          className: \"me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-middle\",\n          children: get(languages, `${selectedLang}.label`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        className: \"language-switch\",\n        right: true,\n        children: map(Object.keys(languages), key => /*#__PURE__*/_jsxDEV(DropdownItem, {\n          onClick: () => changeLanguageAction(key),\n          className: `notify-item ${selectedLang === key ? 'active' : 'none'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: get(languages, `${key}.flag`),\n            alt: \"Skote\",\n            className: \"me-1\",\n            height: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-middle\",\n            children: get(languages, `${key}.label`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default LanguageDropdown;","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/client/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js"],"names":["React","useEffect","useState","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","get","map","i18n","languages","LanguageDropdown","selectedLang","setSelectedLang","menu","setMenu","currentLanguage","localStorage","getItem","changeLanguageAction","lang","changeLanguage","setItem","toggle","Object","keys","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport { get, map } from 'lodash';\n//import { withTranslation } from \"react-i18next\"\n\n//i18n\nimport i18n from '../../../../i18n';\nimport languages from '../../../../common/languages';\n\nconst LanguageDropdown = () => {\n  // Declare a new state variable, which we'll call \"menu\"\n  const [selectedLang, setSelectedLang] = useState('');\n  const [menu, setMenu] = useState(false);\n\n  useEffect(() => {\n    const currentLanguage = localStorage.getItem('I18N_LANGUAGE');\n    setSelectedLang(currentLanguage);\n  }, []);\n\n  const changeLanguageAction = lang => {\n    //set language as i18n\n    i18n.changeLanguage(lang);\n    localStorage.setItem('I18N_LANGUAGE', lang);\n    setSelectedLang(lang);\n  };\n\n  const toggle = () => {\n    setMenu(!menu);\n  };\n\n  return (\n    <>\n      <Dropdown isOpen={menu} toggle={toggle} className=\"d-inline-block\">\n        <DropdownToggle className=\"btn header-item waves-effect\" tag=\"button\">\n          <img\n            src={get(languages, `${selectedLang}.flag`)}\n            alt=\"Skote\"\n            height=\"16\"\n            className=\"me-1\"\n          />\n          <span className=\"align-middle\">{get(languages, `${selectedLang}.label`)}</span>\n        </DropdownToggle>\n        <DropdownMenu className=\"language-switch\" right>\n          {map(Object.keys(languages), key => (\n            <DropdownItem\n              key={key}\n              onClick={() => changeLanguageAction(key)}\n              className={`notify-item ${selectedLang === key ? 'active' : 'none'}`}\n            >\n              <img src={get(languages, `${key}.flag`)} alt=\"Skote\" className=\"me-1\" height=\"12\" />\n              <span className=\"align-middle\">{get(languages, `${key}.label`)}</span>\n            </DropdownItem>\n          ))}\n        </DropdownMenu>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default LanguageDropdown;\n"]},"metadata":{},"sourceType":"module"}