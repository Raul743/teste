{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/autocompleto.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from \"lodash\"; // import faker from 'faker'\n\nimport React, { Component } from \"react\";\nimport { Search, Icon, Label } from \"semantic-ui-react\";\nimport DefaultImg from \"assets/img/uploadPlaceHolder.jpg\";\nimport Empresa from \"assets/img/empresa.png\"; // import \"assets/css/semantic.css\";\n\nimport IssField from \"components/@Fields\";\nconst Itype = {\n  enterprise: \"empresa\",\n  COLETIVA: \"COLETIVA\",\n  SINGULAR: \"SINGULAR\"\n};\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: \"\",\n  Inew: \"\"\n};\n\nconst isEmpty = input => {\n  if (typeof input === \"array\") return input.length === 0;\n  if (typeof input === \"number\") return false;\n  return !input || Object.keys(input).length === 0;\n};\n\nexport default class Autocomplete extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", initialState);\n\n    _defineProperty(this, \"source\", []);\n\n    _defineProperty(this, \"intervalCall\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"handleResultSelect\", (e, {\n      result\n    }) => {\n      if (result.add === \"true\") {\n        if (!isEmpty(result.title.props)) {\n          var _result$title$props$c;\n\n          result.title = (_result$title$props$c = result.title.props.children[4].props) === null || _result$title$props$c === void 0 ? void 0 : _result$title$props$c.children;\n        }\n      }\n\n      this.setState({\n        value: result.title\n      });\n      this.props.onChange(result);\n    });\n\n    _defineProperty(this, \"handleSearchChange\", (e, {\n      value\n    }) => {\n      if (value === \"\") if (this.props.inputChage) this.props.inputChage(value);else if (this.props.inputChange) this.props.inputChange(value);\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.title);\n\n        let Iresult = _.filter(this.source, isMatch);\n\n        if (isEmpty(Iresult)) Iresult = [{\n          add: \"true\",\n          title: /*#__PURE__*/_jsxDEV(Label, {\n            as: \"a\",\n            tag: true,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"add\"\n            }, Math.random().toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), \" \", \"Novo\", \" \", /*#__PURE__*/_jsxDEV(Label.Detail, {\n              children: value\n            }, Math.random().toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), \" \"]\n          }, Math.random().toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this),\n          value: \"k.idPessoa\"\n        }];\n        this.setState({\n          isLoading: false,\n          results: Iresult\n        });\n      }, 300);\n    });\n\n    _defineProperty(this, \"getDefaultVal\", source => {\n      if (!isEmpty(source)) {\n        this.props.onChange(source[0]);\n        return source[0].title;\n      }\n\n      return source;\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (!isEmpty(this.props.defaultValue)) {\n        var _this$props$defaultVa, _this$props$defaultVa2;\n\n        let valor = ((_this$props$defaultVa = this.props.defaultValue) === null || _this$props$defaultVa === void 0 ? void 0 : _this$props$defaultVa.title) || \"\";\n        this.setState({\n          value: valor + \" \"\n        });\n        this.handleSearchChange(\"\", {\n          value: (_this$props$defaultVa2 = this.props.defaultValue) === null || _this$props$defaultVa2 === void 0 ? void 0 : _this$props$defaultVa2.title\n        });\n      }\n    }, 500);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var _this$props, _this$props$source;\n\n    clearTimeout(this.intervalCall.current);\n    this.source = this === null || this === void 0 ? void 0 : (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$source = _this$props.source) === null || _this$props$source === void 0 ? void 0 : _this$props$source.map(k => {\n      if (k.hasOwnProperty(\"image\")) {\n        if (isEmpty(k.image)) {\n          if (!isEmpty(k.defaulttypeimage)) {\n            if (k.defaulttypeimage.toLowerCase() === Itype.enterprise) k.image = Empresa;else k.image = DefaultImg;\n          } else k.image = DefaultImg;\n        }\n      } else {\n        if (!isEmpty(k.defaulttypeimage)) {\n          if (k.defaulttypeimage.toLowerCase() === Itype.enterprise) k.image = Empresa;else k.image = DefaultImg;\n        }\n      }\n\n      return k;\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n\n    const _this$props2 = this.props,\n          {\n      source: ISource,\n      title,\n      apply,\n      name,\n      useadd,\n      addconfig\n    } = _this$props2,\n          rest = _objectWithoutProperties(_this$props2, [\"source\", \"title\", \"apply\", \"name\", \"useadd\", \"addconfig\"]);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `ui right labeled input ${useadd === true ? \" addUser\" : \"\"}`,\n      style: {\n        width: \" 100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        style: {\n          width: \" 100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-control-label\",\n          children: title\n        }, Math.random().toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), this.props.isLoading === true || this.props.isDisabled === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(IssField, {\n            name: name,\n            type: \"select\",\n            data: [],\n            isLoading: this.props.isLoading,\n            isDisabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"isLoadin-Data\",\n          children: /*#__PURE__*/_jsxDEV(Search, _objectSpread({\n            ref: this.newInput,\n            fluid: true,\n            className: \"ui-maxWidth default appearToLeft\",\n            loading: isLoading,\n            onResultSelect: this.handleResultSelect,\n            onSearchChange: _.debounce(this.handleSearchChange, 500, {\n              leading: true\n            }),\n            results: results,\n            value: value\n          }, rest), Math.random().toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, Math.random().toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), useadd && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-control-label\",\n          style: {\n            flex: 1\n          },\n          children: \"\"\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          class: \"text iconAutom\",\n          role: \"alert\",\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\",\n          onClick: () => addconfig.onClick(),\n          children: addconfig && addconfig.render\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, Math.random(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, Math.random().toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/autocompleto.jsx"],"names":["_","React","Component","Search","Icon","Label","DefaultImg","Empresa","IssField","Itype","enterprise","COLETIVA","SINGULAR","initialState","isLoading","results","value","Inew","isEmpty","input","length","Object","keys","Autocomplete","createRef","e","result","add","title","props","children","setState","onChange","inputChage","inputChange","setTimeout","state","re","RegExp","escapeRegExp","isMatch","test","Iresult","filter","source","Math","random","toString","componentDidMount","defaultValue","valor","handleSearchChange","componentDidUpdate","prevProps","prevState","clearTimeout","intervalCall","current","map","k","hasOwnProperty","image","defaulttypeimage","toLowerCase","render","ISource","apply","name","useadd","addconfig","rest","width","isDisabled","newInput","handleResultSelect","debounce","leading","display","flexDirection","flex","onClick"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\n// import faker from 'faker'\nimport React, { Component } from \"react\";\nimport { Search, Icon, Label } from \"semantic-ui-react\";\nimport DefaultImg from \"assets/img/uploadPlaceHolder.jpg\";\nimport Empresa from \"assets/img/empresa.png\";\n\n// import \"assets/css/semantic.css\";\n\n\nimport IssField from \"components/@Fields\";\nconst Itype = {\n    enterprise: \"empresa\",\n    COLETIVA: \"COLETIVA\",\n    SINGULAR: \"SINGULAR\"\n};\n\nconst initialState = { isLoading: false, results: [], value: \"\", Inew: \"\" };\nconst isEmpty = input => {\n    if (typeof input === \"array\") return input.length === 0;\n\n    if (typeof input === \"number\") return false;\n\n    return !input || Object.keys(input).length === 0;\n};\nexport default class Autocomplete extends Component {\n    state = initialState;\n    source = [];\n    intervalCall = React.createRef();\n\n    componentDidMount() {\n        setTimeout(() => {\n            if (!isEmpty(this.props.defaultValue)) {\n                let valor = this.props.defaultValue?.title || \"\";\n                this.setState({ value: valor + \" \" });\n                this.handleSearchChange(\"\", {\n                    value: this.props.defaultValue?.title\n                });\n            }\n        }, 500);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        clearTimeout(this.intervalCall.current);\n        this.source = this?.props?.source?.map(k => {\n            if (k.hasOwnProperty(\"image\")) {\n                if (isEmpty(k.image)) {\n                    if (!isEmpty(k.defaulttypeimage)) {\n                        if (\n                            k.defaulttypeimage.toLowerCase() ===\n                            Itype.enterprise\n                        )\n                            k.image = Empresa;\n                        else k.image = DefaultImg;\n                    } else k.image = DefaultImg;\n                }\n            } else {\n                if (!isEmpty(k.defaulttypeimage)) {\n                    if (k.defaulttypeimage.toLowerCase() === Itype.enterprise)\n                        k.image = Empresa;\n                    else k.image = DefaultImg;\n                }\n            }\n            return k;\n        });\n    }\n\n    handleResultSelect = (e, { result }) => {\n        if (result.add === \"true\") {\n            if (!isEmpty(result.title.props)) {\n                result.title = result.title.props.children[4].props?.children;\n                \n            }\n        }\n\n        this.setState({ value: result.title });\n        this.props.onChange(result);\n    };\n\n    handleSearchChange = (e, { value }) => {\n        if (value === \"\")\n            if (this.props.inputChage) this.props.inputChage(value);\n            else if (this.props.inputChange) this.props.inputChange(value);\n\n        this.setState({ isLoading: true, value });\n        setTimeout(() => {\n            if (this.state.value.length < 1) return this.setState(initialState);\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n            const isMatch = result => re.test(result.title);\n            let Iresult = _.filter(this.source, isMatch);\n            if (isEmpty(Iresult))\n                Iresult = [\n                    {\n                        add: \"true\",\n                        title: (\n                            <Label key={Math.random().toString()} as=\"a\" tag>\n                                {\" \"}\n                                <Icon\n                                    key={Math.random().toString()}\n                                    name=\"add\"\n                                />{\" \"}\n                                Novo{\" \"}\n                                <Label.Detail key={Math.random().toString()}>\n                                    {value}\n                                </Label.Detail>{\" \"}\n                            </Label>\n                        ),\n                        value: \"k.idPessoa\"\n                    }\n                ];\n\n            this.setState({\n                isLoading: false,\n                results: Iresult\n            });\n        }, 300);\n    };\n\n    getDefaultVal = source => {\n        if (!isEmpty(source)) {\n            this.props.onChange(source[0]);\n            return source[0].title;\n        }\n        return source;\n    };\n    render() {\n        const { isLoading, value, results } = this.state;\n        const {\n            source: ISource,\n            title,\n            apply,\n            name,\n            useadd,\n            addconfig,\n            ...rest\n        } = this.props;\n        return (\n            <div\n                key={Math.random().toString()}\n                className={`ui right labeled input ${\n                    useadd === true ? \" addUser\" : \"\"\n                }`}\n                style={{ width: \" 100%\" }}\n            >\n                <div\n                    key={Math.random().toString()}\n                    className=\"field\"\n                    style={{ width: \" 100%\" }}\n                >\n                    <label\n                        className=\"form-control-label\"\n                        key={Math.random().toString()}\n                    >\n                        {title}\n                    </label>\n                    {this.props.isLoading === true ||\n                    this.props.isDisabled === true ? (\n                        <>\n                            <IssField\n                                name={name}\n                                type=\"select\"\n                                data={[]}\n                                isLoading={this.props.isLoading}\n                                isDisabled={true}\n                            />\n                        </>\n                    ) : (\n                        <div className=\"isLoadin-Data\">\n                            <Search\n                                ref={this.newInput}\n                                key={Math.random().toString()}\n                                fluid\n                                className=\"ui-maxWidth default appearToLeft\"\n                                loading={isLoading}\n                                onResultSelect={this.handleResultSelect}\n                                onSearchChange={_.debounce(\n                                    this.handleSearchChange,\n                                    500,\n                                    {\n                                        leading: true\n                                    }\n                                )}\n                                results={results}\n                                value={value}\n                                {...rest}\n                                // disabled={\n                                //     apply !== \"false\" && ISource?.length === 1\n                                //         ? true\n                                //         : false\n                                // }\n                            />\n                        </div>\n                    )}\n                </div>\n                {useadd && (\n                    <div\n                        key={Math.random()}\n                        style={{ display: \"flex\", flexDirection: \"column\" }}\n                    >\n                        <label\n                            key={Math.random()}\n                            className=\"form-control-label\"\n                            style={{ flex: 1 }}\n                        >\n                            {\"\"}\n                        </label>\n                        <div\n                            key={Math.random()}\n                            style={{ flex: 1 }}\n                            class=\"text iconAutom\"\n                            role=\"alert\"\n                            aria-live=\"polite\"\n                            aria-atomic=\"true\"\n                            onClick={() => addconfig.onClick()}\n                        >\n                            {addconfig && addconfig.render}\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}