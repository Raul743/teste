{"ast":null,"code":"import GraphQL from \"./index\";\nexport async function getBI(id) {\n  try {\n    const response = await GraphQL.get(`\n     allPeople(id:\"${id}\") {\n    edges {\n      node {\n        id\n        tin\n        firstName\n        lastName\n        gender\n        birthDate\n        socialSecurityNumber\n        maritalState\n        fullName\n        identitycardsSet {\n          edges {\n            node {\n              id\n              fatherName\n              motherName\n              residenceAddress\n              residenceCountry\n              residenceProvince\n              residenceMunicipality\n              residenceCommune\n              residenceNeighbor\n              issuePlace\n              birthProvince\n              birthMunicipality\n              height\n              issueDate\n              issuePlace\n              validUntil\n              signature\n              cardImageFrontUrl\n              cardImageBackUrl\n              qrCode\n            }\n          }\n        }\n      }\n    }\n  }\n      `);\n    console.log(\"response: \", response);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function getPermission() {\n  try {\n    var _response$allDistrict;\n\n    const response = await GraphQL.get(`\n        allDistricts {\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      `);\n    return response === null || response === void 0 ? void 0 : (_response$allDistrict = response.allDistricts) === null || _response$allDistrict === void 0 ? void 0 : _response$allDistrict.edges;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function getMenus() {\n  try {\n    var _resultResponse$allMe;\n\n    const resultResponse = await GraphQL.get(`\n        allMenus {\n          edges {\n            node {\n              id\n              menu\n              icon\n              submenusSet {\n                edges {\n                  node {\n                    id\n                    submenu\n                  }\n                }\n              }\n            }\n          }\n        }\n      \n      `);\n    console.log(\"Resultado: \", resultResponse);\n    return resultResponse === null || resultResponse === void 0 ? void 0 : (_resultResponse$allMe = resultResponse.allMenus) === null || _resultResponse$allMe === void 0 ? void 0 : _resultResponse$allMe.edges;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function getPerson() {\n  try {\n    var _resultResponse$allMe2;\n\n    const resultResponse = await GraphQL.get(`\n      allPerson{\n        edges{\n          node{\n            id\n            name\n          }\n        }\n      }\n      \n      `);\n    console.log(\"Resultado Pessoas: \", resultResponse);\n    return resultResponse === null || resultResponse === void 0 ? void 0 : (_resultResponse$allMe2 = resultResponse.allMenus) === null || _resultResponse$allMe2 === void 0 ? void 0 : _resultResponse$allMe2.edges;\n  } catch (err) {\n    console.log(err);\n  }\n}","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/utils/graphQL/queries.ts"],"names":["GraphQL","getBI","id","response","get","console","log","err","getPermission","allDistricts","edges","getMenus","resultResponse","allMenus","getPerson"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,EAArB,EAAiC;AACtC,MAAI;AACF,UAAMC,QAAa,GAAG,MAAMH,OAAO,CAACI,GAAR,CACzB;AACP,qBAAqBF,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA3CgC,CAA5B;AA6CAG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B;AACA,WAAOA,QAAP;AACD,GAhDD,CAgDE,OAAOI,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AACD,OAAO,eAAeC,aAAf,GAA+B;AACpC,MAAI;AAAA;;AACF,UAAML,QAAa,GAAG,MAAMH,OAAO,CAACI,GAAR,CACzB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OATgC,CAA5B;AAWA,WAAOD,QAAP,aAAOA,QAAP,gDAAOA,QAAQ,CAAEM,YAAjB,0DAAO,sBAAwBC,KAA/B;AACD,GAbD,CAaE,OAAOH,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED,OAAO,eAAeI,QAAf,GAA0B;AAC/B,MAAI;AAAA;;AACF,UAAMC,cAAmB,GAAG,MAAMZ,OAAO,CAACI,GAAR,CAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OApBsC,CAAlC;AAuBAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,cAA3B;AAEA,WAAOA,cAAP,aAAOA,cAAP,gDAAOA,cAAc,CAAEC,QAAvB,0DAAO,sBAA0BH,KAAjC;AACD,GA3BD,CA2BE,OAAOH,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF;AAED,OAAO,eAAeO,SAAf,GAA2B;AAChC,MAAI;AAAA;;AACF,UAAMF,cAAmB,GAAG,MAAMZ,OAAO,CAACI,GAAR,CAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAXsC,CAAlC;AAcAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,cAAnC;AAEA,WAAOA,cAAP,aAAOA,cAAP,iDAAOA,cAAc,CAAEC,QAAvB,2DAAO,uBAA0BH,KAAjC;AACD,GAlBD,CAkBE,OAAOH,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF","sourcesContent":["import GraphQL from \"./index\";\r\n\r\nexport async function getBI(id: string) {\r\n  try {\r\n    const response: any = await GraphQL.get(\r\n      `\r\n     allPeople(id:\"${id}\") {\r\n    edges {\r\n      node {\r\n        id\r\n        tin\r\n        firstName\r\n        lastName\r\n        gender\r\n        birthDate\r\n        socialSecurityNumber\r\n        maritalState\r\n        fullName\r\n        identitycardsSet {\r\n          edges {\r\n            node {\r\n              id\r\n              fatherName\r\n              motherName\r\n              residenceAddress\r\n              residenceCountry\r\n              residenceProvince\r\n              residenceMunicipality\r\n              residenceCommune\r\n              residenceNeighbor\r\n              issuePlace\r\n              birthProvince\r\n              birthMunicipality\r\n              height\r\n              issueDate\r\n              issuePlace\r\n              validUntil\r\n              signature\r\n              cardImageFrontUrl\r\n              cardImageBackUrl\r\n              qrCode\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n      `\r\n    );\r\n    console.log(\"response: \", response);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport async function getPermission() {\r\n  try {\r\n    const response: any = await GraphQL.get(\r\n      `\r\n        allDistricts {\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      `\r\n    );\r\n    return response?.allDistricts?.edges;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function getMenus() {\r\n  try {\r\n    const resultResponse: any = await GraphQL.get(\r\n      `\r\n        allMenus {\r\n          edges {\r\n            node {\r\n              id\r\n              menu\r\n              icon\r\n              submenusSet {\r\n                edges {\r\n                  node {\r\n                    id\r\n                    submenu\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      \r\n      `\r\n    );\r\n\r\n    console.log(\"Resultado: \", resultResponse);\r\n\r\n    return resultResponse?.allMenus?.edges;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function getPerson() {\r\n  try {\r\n    const resultResponse: any = await GraphQL.get(\r\n      `\r\n      allPerson{\r\n        edges{\r\n          node{\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n      \r\n      `\r\n    );\r\n\r\n    console.log(\"Resultado Pessoas: \", resultResponse);\r\n\r\n    return resultResponse?.allMenus?.edges;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}