{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/autocompleto.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from \"lodash\"; // import faker from 'faker'\n\nimport React, { Component } from \"react\";\nimport { Search, Icon, Label } from \"semantic-ui-react\";\nimport DefaultImg from \"assets/img/uploadPlaceHolder.jpg\";\nimport Empresa from \"assets/img/empresa.png\";\nimport \"assets/css/semantic-ui-css/semantic.css\"; // import \"assets/css/semantic.css\";\n\nimport \"./autocomplete.css\";\nimport { isEmpty } from \"../../../general/genericsFun\";\nimport IssField from \"components/@Fields\";\nvar Itype = {\n  enterprise: \"empresa\",\n  COLETIVA: \"COLETIVA\",\n  SINGULAR: \"SINGULAR\"\n};\nvar initialState = {\n  isLoading: false,\n  results: [],\n  value: \"\",\n  Inew: \"\"\n};\n\nvar Autocomplete = /*#__PURE__*/function (_Component) {\n  _inherits(Autocomplete, _Component);\n\n  var _super = _createSuper(Autocomplete);\n\n  function Autocomplete() {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", initialState);\n\n    _defineProperty(_assertThisInitialized(_this), \"source\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"intervalCall\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResultSelect\", function (e, _ref) {\n      var result = _ref.result;\n\n      if (result.add === \"true\") {\n        if (!isEmpty(result.title.props)) {\n          var _result$title$props$c;\n\n          result.title = (_result$title$props$c = result.title.props.children[4].props) === null || _result$title$props$c === void 0 ? void 0 : _result$title$props$c.children;\n        }\n      }\n\n      _this.setState({\n        value: result.title\n      });\n\n      _this.props.onChange(result);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchChange\", function (e, _ref2) {\n      var value = _ref2.value;\n      if (value === \"\") if (_this.props.inputChage) _this.props.inputChage(value);else if (_this.props.inputChange) _this.props.inputChange(value);\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      });\n\n      setTimeout(function () {\n        if (_this.state.value.length < 1) return _this.setState(initialState);\n        var re = new RegExp(_.escapeRegExp(_this.state.value), \"i\");\n\n        var isMatch = function isMatch(result) {\n          return re.test(result.title);\n        };\n\n        var Iresult = _.filter(_this.source, isMatch);\n\n        if (isEmpty(Iresult)) Iresult = [{\n          add: \"true\",\n          title: /*#__PURE__*/_jsxDEV(Label, {\n            as: \"a\",\n            tag: true,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"add\"\n            }, Math.random().toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, _assertThisInitialized(_this)), \" \", \"Novo\", \" \", /*#__PURE__*/_jsxDEV(Label.Detail, {\n              children: value\n            }, Math.random().toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, _assertThisInitialized(_this)), \" \"]\n          }, Math.random().toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, _assertThisInitialized(_this)),\n          value: \"k.idPessoa\"\n        }];\n\n        _this.setState({\n          isLoading: false,\n          results: Iresult\n        });\n      }, 300);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDefaultVal\", function (source) {\n      if (!isEmpty(source)) {\n        _this.props.onChange(source[0]);\n\n        return source[0].title;\n      }\n\n      return source;\n    });\n\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        if (!isEmpty(_this2.props.defaultValue)) {\n          var _this2$props$defaultV, _this2$props$defaultV2;\n\n          var valor = ((_this2$props$defaultV = _this2.props.defaultValue) === null || _this2$props$defaultV === void 0 ? void 0 : _this2$props$defaultV.title) || \"\";\n\n          _this2.setState({\n            value: valor + \" \"\n          });\n\n          _this2.handleSearchChange(\"\", {\n            value: (_this2$props$defaultV2 = _this2.props.defaultValue) === null || _this2$props$defaultV2 === void 0 ? void 0 : _this2$props$defaultV2.title\n          });\n        }\n      }, 500);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props, _this$props$source;\n\n      clearTimeout(this.intervalCall.current);\n      this.source = this === null || this === void 0 ? void 0 : (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$source = _this$props.source) === null || _this$props$source === void 0 ? void 0 : _this$props$source.map(function (k) {\n        if (k.hasOwnProperty(\"image\")) {\n          if (isEmpty(k.image)) {\n            if (!isEmpty(k.defaulttypeimage)) {\n              if (k.defaulttypeimage.toLowerCase() === Itype.enterprise) k.image = Empresa;else k.image = DefaultImg;\n            } else k.image = DefaultImg;\n          }\n        } else {\n          if (!isEmpty(k.defaulttypeimage)) {\n            if (k.defaulttypeimage.toLowerCase() === Itype.enterprise) k.image = Empresa;else k.image = DefaultImg;\n          }\n        }\n\n        return k;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n\n      var _this$props2 = this.props,\n          ISource = _this$props2.source,\n          title = _this$props2.title,\n          apply = _this$props2.apply,\n          name = _this$props2.name,\n          useadd = _this$props2.useadd,\n          addconfig = _this$props2.addconfig,\n          rest = _objectWithoutProperties(_this$props2, [\"source\", \"title\", \"apply\", \"name\", \"useadd\", \"addconfig\"]);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui right labeled input \".concat(useadd === true ? \" addUser\" : \"\"),\n        style: {\n          width: \" 100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          style: {\n            width: \" 100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control-label\",\n            children: title\n          }, Math.random().toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), this.props.isLoading === true || this.props.isDisabled === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(IssField, {\n              name: name,\n              type: \"select\",\n              data: [],\n              isLoading: this.props.isLoading,\n              isDisabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"isLoadin-Data\",\n            children: /*#__PURE__*/_jsxDEV(Search, _objectSpread({\n              ref: this.newInput,\n              fluid: true,\n              className: \"ui-maxWidth default appearToLeft\",\n              loading: isLoading,\n              onResultSelect: this.handleResultSelect,\n              onSearchChange: _.debounce(this.handleSearchChange, 500, {\n                leading: true\n              }),\n              results: results,\n              value: value\n            }, rest), Math.random().toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, Math.random().toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), useadd && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control-label\",\n            style: {\n              flex: 1\n            },\n            children: \"\"\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            \"class\": \"text iconAutom\",\n            role: \"alert\",\n            \"aria-live\": \"polite\",\n            \"aria-atomic\": \"true\",\n            onClick: function onClick() {\n              return addconfig.onClick();\n            },\n            children: addconfig && addconfig.render\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, Math.random().toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Autocomplete;\n}(Component);\n\nexport { Autocomplete as default };","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/autocompleto.jsx"],"names":["_","React","Component","Search","Icon","Label","DefaultImg","Empresa","isEmpty","IssField","Itype","enterprise","COLETIVA","SINGULAR","initialState","isLoading","results","value","Inew","Autocomplete","createRef","e","result","add","title","props","children","setState","onChange","inputChage","inputChange","setTimeout","state","length","re","RegExp","escapeRegExp","isMatch","test","Iresult","filter","source","Math","random","toString","defaultValue","valor","handleSearchChange","prevProps","prevState","clearTimeout","intervalCall","current","map","k","hasOwnProperty","image","defaulttypeimage","toLowerCase","ISource","apply","name","useadd","addconfig","rest","width","isDisabled","newInput","handleResultSelect","debounce","leading","display","flexDirection","flex","onClick","render"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,yCAAP,C,CACA;;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,SADF;AAEVC,EAAAA,QAAQ,EAAE,UAFA;AAGVC,EAAAA,QAAQ,EAAE;AAHA,CAAd;AAMA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,OAAO,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE,EAAxC;AAA4CC,EAAAA,IAAI,EAAE;AAAlD,CAArB;;IAEqBC,Y;;;;;;;;;;;;;;;;4DACTL,Y;;6DACC,E;;gFACMb,KAAK,CAACmB,SAAN,E;;yEAuCM,UAACC,CAAD,QAAmB;AAAA,UAAbC,MAAa,QAAbA,MAAa;;AACpC,UAAIA,MAAM,CAACC,GAAP,KAAe,MAAnB,EAA2B;AACvB,YAAI,CAACf,OAAO,CAACc,MAAM,CAACE,KAAP,CAAaC,KAAd,CAAZ,EAAkC;AAAA;;AAC9BH,UAAAA,MAAM,CAACE,KAAP,4BAAeF,MAAM,CAACE,KAAP,CAAaC,KAAb,CAAmBC,QAAnB,CAA4B,CAA5B,EAA+BD,KAA9C,0DAAe,sBAAsCC,QAArD;AAEH;AACJ;;AAED,YAAKC,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAAhB,OAAd;;AACA,YAAKC,KAAL,CAAWG,QAAX,CAAoBN,MAApB;AACH,K;;yEAEoB,UAACD,CAAD,SAAkB;AAAA,UAAZJ,KAAY,SAAZA,KAAY;AACnC,UAAIA,KAAK,KAAK,EAAd,EACI,IAAI,MAAKQ,KAAL,CAAWI,UAAf,EAA2B,MAAKJ,KAAL,CAAWI,UAAX,CAAsBZ,KAAtB,EAA3B,KACK,IAAI,MAAKQ,KAAL,CAAWK,WAAf,EAA4B,MAAKL,KAAL,CAAWK,WAAX,CAAuBb,KAAvB;;AAErC,YAAKU,QAAL,CAAc;AAAEZ,QAAAA,SAAS,EAAE,IAAb;AAAmBE,QAAAA,KAAK,EAALA;AAAnB,OAAd;;AACAc,MAAAA,UAAU,CAAC,YAAM;AACb,YAAI,MAAKC,KAAL,CAAWf,KAAX,CAAiBgB,MAAjB,GAA0B,CAA9B,EAAiC,OAAO,MAAKN,QAAL,CAAcb,YAAd,CAAP;AAEjC,YAAMoB,EAAE,GAAG,IAAIC,MAAJ,CAAWnC,CAAC,CAACoC,YAAF,CAAe,MAAKJ,KAAL,CAAWf,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,YAAMoB,OAAO,GAAG,SAAVA,OAAU,CAAAf,MAAM;AAAA,iBAAIY,EAAE,CAACI,IAAH,CAAQhB,MAAM,CAACE,KAAf,CAAJ;AAAA,SAAtB;;AACA,YAAIe,OAAO,GAAGvC,CAAC,CAACwC,MAAF,CAAS,MAAKC,MAAd,EAAsBJ,OAAtB,CAAd;;AACA,YAAI7B,OAAO,CAAC+B,OAAD,CAAX,EACIA,OAAO,GAAG,CACN;AACIhB,UAAAA,GAAG,EAAE,MADT;AAEIC,UAAAA,KAAK,eACD,QAAC,KAAD;AAAsC,YAAA,EAAE,EAAC,GAAzC;AAA6C,YAAA,GAAG,MAAhD;AAAA,uBACK,GADL,eAEI,QAAC,IAAD;AAEI,cAAA,IAAI,EAAC;AAFT,eACSkB,IAAI,CAACC,MAAL,GAAcC,QAAd,EADT;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAKO,GALP,UAMS,GANT,eAOI,QAAC,KAAD,CAAO,MAAP;AAAA,wBACK3B;AADL,eAAmByB,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAnB;AAAA;AAAA;AAAA;AAAA,6CAPJ,EASoB,GATpB;AAAA,aAAYF,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAZ;AAAA;AAAA;AAAA;AAAA,2CAHR;AAeI3B,UAAAA,KAAK,EAAE;AAfX,SADM,CAAV;;AAoBJ,cAAKU,QAAL,CAAc;AACVZ,UAAAA,SAAS,EAAE,KADD;AAEVC,UAAAA,OAAO,EAAEuB;AAFC,SAAd;AAIH,OA/BS,EA+BP,GA/BO,CAAV;AAgCH,K;;oEAEe,UAAAE,MAAM,EAAI;AACtB,UAAI,CAACjC,OAAO,CAACiC,MAAD,CAAZ,EAAsB;AAClB,cAAKhB,KAAL,CAAWG,QAAX,CAAoBa,MAAM,CAAC,CAAD,CAA1B;;AACA,eAAOA,MAAM,CAAC,CAAD,CAAN,CAAUjB,KAAjB;AACH;;AACD,aAAOiB,MAAP;AACH,K;;;;;;;wCA/FmB;AAAA;;AAChBV,MAAAA,UAAU,CAAC,YAAM;AACb,YAAI,CAACvB,OAAO,CAAC,MAAI,CAACiB,KAAL,CAAWoB,YAAZ,CAAZ,EAAuC;AAAA;;AACnC,cAAIC,KAAK,GAAG,0BAAA,MAAI,CAACrB,KAAL,CAAWoB,YAAX,gFAAyBrB,KAAzB,KAAkC,EAA9C;;AACA,UAAA,MAAI,CAACG,QAAL,CAAc;AAAEV,YAAAA,KAAK,EAAE6B,KAAK,GAAG;AAAjB,WAAd;;AACA,UAAA,MAAI,CAACC,kBAAL,CAAwB,EAAxB,EAA4B;AACxB9B,YAAAA,KAAK,4BAAE,MAAI,CAACQ,KAAL,CAAWoB,YAAb,2DAAE,uBAAyBrB;AADR,WAA5B;AAGH;AACJ,OARS,EAQP,GARO,CAAV;AASH;;;uCAEkBwB,S,EAAWC,S,EAAW;AAAA;;AACrCC,MAAAA,YAAY,CAAC,KAAKC,YAAL,CAAkBC,OAAnB,CAAZ;AACA,WAAKX,MAAL,GAAc,IAAd,aAAc,IAAd,sCAAc,KAAMhB,KAApB,sEAAc,YAAagB,MAA3B,uDAAc,mBAAqBY,GAArB,CAAyB,UAAAC,CAAC,EAAI;AACxC,YAAIA,CAAC,CAACC,cAAF,CAAiB,OAAjB,CAAJ,EAA+B;AAC3B,cAAI/C,OAAO,CAAC8C,CAAC,CAACE,KAAH,CAAX,EAAsB;AAClB,gBAAI,CAAChD,OAAO,CAAC8C,CAAC,CAACG,gBAAH,CAAZ,EAAkC;AAC9B,kBACIH,CAAC,CAACG,gBAAF,CAAmBC,WAAnB,OACAhD,KAAK,CAACC,UAFV,EAII2C,CAAC,CAACE,KAAF,GAAUjD,OAAV,CAJJ,KAKK+C,CAAC,CAACE,KAAF,GAAUlD,UAAV;AACR,aAPD,MAOOgD,CAAC,CAACE,KAAF,GAAUlD,UAAV;AACV;AACJ,SAXD,MAWO;AACH,cAAI,CAACE,OAAO,CAAC8C,CAAC,CAACG,gBAAH,CAAZ,EAAkC;AAC9B,gBAAIH,CAAC,CAACG,gBAAF,CAAmBC,WAAnB,OAAqChD,KAAK,CAACC,UAA/C,EACI2C,CAAC,CAACE,KAAF,GAAUjD,OAAV,CADJ,KAEK+C,CAAC,CAACE,KAAF,GAAUlD,UAAV;AACR;AACJ;;AACD,eAAOgD,CAAP;AACH,OApBa,CAAd;AAqBH;;;6BA6DQ;AAAA,wBACiC,KAAKtB,KADtC;AAAA,UACGjB,SADH,eACGA,SADH;AAAA,UACcE,KADd,eACcA,KADd;AAAA,UACqBD,OADrB,eACqBA,OADrB;;AAAA,yBAUD,KAAKS,KAVJ;AAAA,UAGOkC,OAHP,gBAGDlB,MAHC;AAAA,UAIDjB,KAJC,gBAIDA,KAJC;AAAA,UAKDoC,KALC,gBAKDA,KALC;AAAA,UAMDC,IANC,gBAMDA,IANC;AAAA,UAODC,MAPC,gBAODA,MAPC;AAAA,UAQDC,SARC,gBAQDA,SARC;AAAA,UASEC,IATF;;AAWL,0BACI;AAEI,QAAA,SAAS,mCACLF,MAAM,KAAK,IAAX,GAAkB,UAAlB,GAA+B,EAD1B,CAFb;AAKI,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SALX;AAAA,gCAOI;AAEI,UAAA,SAAS,EAAC,OAFd;AAGI,UAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAE;AAAT,WAHX;AAAA,kCAKI;AACI,YAAA,SAAS,EAAC,oBADd;AAAA,sBAIKzC;AAJL,aAESkB,IAAI,CAACC,MAAL,GAAcC,QAAd,EAFT;AAAA;AAAA;AAAA;AAAA,kBALJ,EAWK,KAAKnB,KAAL,CAAWV,SAAX,KAAyB,IAAzB,IACD,KAAKU,KAAL,CAAWyC,UAAX,KAA0B,IADzB,gBAEG;AAAA,mCACI,QAAC,QAAD;AACI,cAAA,IAAI,EAAEL,IADV;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,cAAA,IAAI,EAAE,EAHV;AAII,cAAA,SAAS,EAAE,KAAKpC,KAAL,CAAWV,SAJ1B;AAKI,cAAA,UAAU,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ,2BAFH,gBAYG;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,GAAG,EAAE,KAAKoD,QADd;AAGI,cAAA,KAAK,MAHT;AAII,cAAA,SAAS,EAAC,kCAJd;AAKI,cAAA,OAAO,EAAEpD,SALb;AAMI,cAAA,cAAc,EAAE,KAAKqD,kBANzB;AAOI,cAAA,cAAc,EAAEpE,CAAC,CAACqE,QAAF,CACZ,KAAKtB,kBADO,EAEZ,GAFY,EAGZ;AACIuB,gBAAAA,OAAO,EAAE;AADb,eAHY,CAPpB;AAcI,cAAA,OAAO,EAAEtD,OAdb;AAeI,cAAA,KAAK,EAAEC;AAfX,eAgBQ+C,IAhBR,GAEStB,IAAI,CAACC,MAAL,GAAcC,QAAd,EAFT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvBR;AAAA,WACSF,IAAI,CAACC,MAAL,GAAcC,QAAd,EADT;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAyDKkB,MAAM,iBACH;AAEI,UAAA,KAAK,EAAE;AAAES,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,aAAa,EAAE;AAAlC,WAFX;AAAA,kCAII;AAEI,YAAA,SAAS,EAAC,oBAFd;AAGI,YAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAHX;AAAA,sBAKK;AALL,aACS/B,IAAI,CAACC,MAAL,EADT;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAWI;AAEI,YAAA,KAAK,EAAE;AAAE8B,cAAAA,IAAI,EAAE;AAAR,aAFX;AAGI,qBAAM,gBAHV;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,yBAAU,QALd;AAMI,2BAAY,MANhB;AAOI,YAAA,OAAO,EAAE;AAAA,qBAAMV,SAAS,CAACW,OAAV,EAAN;AAAA,aAPb;AAAA,sBASKX,SAAS,IAAIA,SAAS,CAACY;AAT5B,aACSjC,IAAI,CAACC,MAAL,EADT;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA,WACSD,IAAI,CAACC,MAAL,EADT;AAAA;AAAA;AAAA;AAAA,gBA1DR;AAAA,SACSD,IAAI,CAACC,MAAL,GAAcC,QAAd,EADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAqFH;;;;EArMqC1C,S;;SAArBiB,Y","sourcesContent":["import _ from \"lodash\";\n// import faker from 'faker'\nimport React, { Component } from \"react\";\nimport { Search, Icon, Label } from \"semantic-ui-react\";\nimport DefaultImg from \"assets/img/uploadPlaceHolder.jpg\";\nimport Empresa from \"assets/img/empresa.png\";\nimport \"assets/css/semantic-ui-css/semantic.css\";\n// import \"assets/css/semantic.css\";\nimport \"./autocomplete.css\";\nimport { isEmpty } from \"../../../general/genericsFun\";\nimport IssField from \"components/@Fields\";\nconst Itype = {\n    enterprise: \"empresa\",\n    COLETIVA: \"COLETIVA\",\n    SINGULAR: \"SINGULAR\"\n};\n\nconst initialState = { isLoading: false, results: [], value: \"\", Inew: \"\" };\n\nexport default class Autocomplete extends Component {\n    state = initialState;\n    source = [];\n    intervalCall = React.createRef();\n\n    componentDidMount() {\n        setTimeout(() => {\n            if (!isEmpty(this.props.defaultValue)) {\n                let valor = this.props.defaultValue?.title || \"\";\n                this.setState({ value: valor + \" \" });\n                this.handleSearchChange(\"\", {\n                    value: this.props.defaultValue?.title\n                });\n            }\n        }, 500);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        clearTimeout(this.intervalCall.current);\n        this.source = this?.props?.source?.map(k => {\n            if (k.hasOwnProperty(\"image\")) {\n                if (isEmpty(k.image)) {\n                    if (!isEmpty(k.defaulttypeimage)) {\n                        if (\n                            k.defaulttypeimage.toLowerCase() ===\n                            Itype.enterprise\n                        )\n                            k.image = Empresa;\n                        else k.image = DefaultImg;\n                    } else k.image = DefaultImg;\n                }\n            } else {\n                if (!isEmpty(k.defaulttypeimage)) {\n                    if (k.defaulttypeimage.toLowerCase() === Itype.enterprise)\n                        k.image = Empresa;\n                    else k.image = DefaultImg;\n                }\n            }\n            return k;\n        });\n    }\n\n    handleResultSelect = (e, { result }) => {\n        if (result.add === \"true\") {\n            if (!isEmpty(result.title.props)) {\n                result.title = result.title.props.children[4].props?.children;\n                \n            }\n        }\n\n        this.setState({ value: result.title });\n        this.props.onChange(result);\n    };\n\n    handleSearchChange = (e, { value }) => {\n        if (value === \"\")\n            if (this.props.inputChage) this.props.inputChage(value);\n            else if (this.props.inputChange) this.props.inputChange(value);\n\n        this.setState({ isLoading: true, value });\n        setTimeout(() => {\n            if (this.state.value.length < 1) return this.setState(initialState);\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n            const isMatch = result => re.test(result.title);\n            let Iresult = _.filter(this.source, isMatch);\n            if (isEmpty(Iresult))\n                Iresult = [\n                    {\n                        add: \"true\",\n                        title: (\n                            <Label key={Math.random().toString()} as=\"a\" tag>\n                                {\" \"}\n                                <Icon\n                                    key={Math.random().toString()}\n                                    name=\"add\"\n                                />{\" \"}\n                                Novo{\" \"}\n                                <Label.Detail key={Math.random().toString()}>\n                                    {value}\n                                </Label.Detail>{\" \"}\n                            </Label>\n                        ),\n                        value: \"k.idPessoa\"\n                    }\n                ];\n\n            this.setState({\n                isLoading: false,\n                results: Iresult\n            });\n        }, 300);\n    };\n\n    getDefaultVal = source => {\n        if (!isEmpty(source)) {\n            this.props.onChange(source[0]);\n            return source[0].title;\n        }\n        return source;\n    };\n    render() {\n        const { isLoading, value, results } = this.state;\n        const {\n            source: ISource,\n            title,\n            apply,\n            name,\n            useadd,\n            addconfig,\n            ...rest\n        } = this.props;\n        return (\n            <div\n                key={Math.random().toString()}\n                className={`ui right labeled input ${\n                    useadd === true ? \" addUser\" : \"\"\n                }`}\n                style={{ width: \" 100%\" }}\n            >\n                <div\n                    key={Math.random().toString()}\n                    className=\"field\"\n                    style={{ width: \" 100%\" }}\n                >\n                    <label\n                        className=\"form-control-label\"\n                        key={Math.random().toString()}\n                    >\n                        {title}\n                    </label>\n                    {this.props.isLoading === true ||\n                    this.props.isDisabled === true ? (\n                        <>\n                            <IssField\n                                name={name}\n                                type=\"select\"\n                                data={[]}\n                                isLoading={this.props.isLoading}\n                                isDisabled={true}\n                            />\n                        </>\n                    ) : (\n                        <div className=\"isLoadin-Data\">\n                            <Search\n                                ref={this.newInput}\n                                key={Math.random().toString()}\n                                fluid\n                                className=\"ui-maxWidth default appearToLeft\"\n                                loading={isLoading}\n                                onResultSelect={this.handleResultSelect}\n                                onSearchChange={_.debounce(\n                                    this.handleSearchChange,\n                                    500,\n                                    {\n                                        leading: true\n                                    }\n                                )}\n                                results={results}\n                                value={value}\n                                {...rest}\n                                // disabled={\n                                //     apply !== \"false\" && ISource?.length === 1\n                                //         ? true\n                                //         : false\n                                // }\n                            />\n                        </div>\n                    )}\n                </div>\n                {useadd && (\n                    <div\n                        key={Math.random()}\n                        style={{ display: \"flex\", flexDirection: \"column\" }}\n                    >\n                        <label\n                            key={Math.random()}\n                            className=\"form-control-label\"\n                            style={{ flex: 1 }}\n                        >\n                            {\"\"}\n                        </label>\n                        <div\n                            key={Math.random()}\n                            style={{ flex: 1 }}\n                            class=\"text iconAutom\"\n                            role=\"alert\"\n                            aria-live=\"polite\"\n                            aria-atomic=\"true\"\n                            onClick={() => addconfig.onClick()}\n                        >\n                            {addconfig && addconfig.render}\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}