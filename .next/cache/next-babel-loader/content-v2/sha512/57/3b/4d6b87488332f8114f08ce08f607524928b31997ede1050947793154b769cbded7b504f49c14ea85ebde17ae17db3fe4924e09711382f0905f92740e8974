{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/inputmask.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useField } from \"@unform/core\";\nimport ReactInputMask from \"react-input-mask\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst InputMask = (_ref) => {\n  let {\n    name\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\"]);\n\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    defaultValue\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: \"value\",\n\n      setValue(ref, value) {\n        ref.setInputValue(value);\n      },\n\n      clearValue(ref) {\n        ref.setInputValue(\"\");\n      }\n\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/_jsxDEV(ReactInputMask, _objectSpread({\n    ref: inputRef,\n    defaultValue: defaultValue\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nexport default InputMask;","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/components/@Fields/contains/inputmask.jsx"],"names":["useField","ReactInputMask","React","useRef","useEffect","InputMask","name","rest","inputRef","fieldName","registerField","defaultValue","ref","current","path","setValue","value","setInputValue","clearValue"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,MAAMC,SAAS,GAAG,UAAuB;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AAAA,MAAXC,IAAW;;AACrC,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAA6CX,QAAQ,CAACM,IAAD,CAA3D;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa,CAAC;AACVJ,MAAAA,IAAI,EAAEG,SADI;AAEVG,MAAAA,GAAG,EAAEJ,QAAQ,CAACK,OAFJ;AAGVC,MAAAA,IAAI,EAAE,OAHI;;AAIVC,MAAAA,QAAQ,CAACH,GAAD,EAAMI,KAAN,EAAa;AACjBJ,QAAAA,GAAG,CAACK,aAAJ,CAAkBD,KAAlB;AACH,OANS;;AAOVE,MAAAA,UAAU,CAACN,GAAD,EAAM;AACZA,QAAAA,GAAG,CAACK,aAAJ,CAAkB,EAAlB;AACH;;AATS,KAAD,CAAb;AAWH,GAZQ,EAYN,CAACR,SAAD,EAAYC,aAAZ,CAZM,CAAT;AAaA,sBACI,QAAC,cAAD;AAAgB,IAAA,GAAG,EAAEF,QAArB;AAA+B,IAAA,YAAY,EAAEG;AAA7C,KAA+DJ,IAA/D;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAnBD;;AAoBA,eAAeF,SAAf","sourcesContent":["import { useField } from \"@unform/core\";\nimport ReactInputMask from \"react-input-mask\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst InputMask = ({ name, ...rest }) => {\n    const inputRef = useRef(null);\n    const { fieldName, registerField, defaultValue } = useField(name);\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: \"value\",\n            setValue(ref, value) {\n                ref.setInputValue(value);\n            },\n            clearValue(ref) {\n                ref.setInputValue(\"\");\n            }\n        });\n    }, [fieldName, registerField]);\n    return (\n        <ReactInputMask ref={inputRef} defaultValue={defaultValue} {...rest} />\n    );\n};\nexport default InputMask;\n"]},"metadata":{},"sourceType":"module"}