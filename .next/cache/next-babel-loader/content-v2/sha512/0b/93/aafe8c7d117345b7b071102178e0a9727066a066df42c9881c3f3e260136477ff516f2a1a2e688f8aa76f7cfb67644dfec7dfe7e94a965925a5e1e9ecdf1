{"ast":null,"code":"import _regeneratorRuntime from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport GraphQL from \"./index\";\nexport function getBI(_x) {\n  return _getBI.apply(this, arguments);\n}\n\nfunction _getBI() {\n  _getBI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return GraphQL.get(\"\\n     allPeople(id:\\\"\".concat(id, \"\\\") {\\n    edges {\\n      node {\\n        id\\n        tin\\n        firstName\\n        lastName\\n        gender\\n        birthDate\\n        socialSecurityNumber\\n        maritalState\\n        fullName\\n        identitycardsSet {\\n          edges {\\n            node {\\n              id\\n              fatherName\\n              motherName\\n              residenceAddress\\n              residenceCountry\\n              residenceProvince\\n              residenceMunicipality\\n              residenceCommune\\n              residenceNeighbor\\n              issuePlace\\n              birthProvince\\n              birthMunicipality\\n              height\\n              issueDate\\n              issuePlace\\n              validUntil\\n              signature\\n              cardImageFrontUrl\\n              cardImageBackUrl\\n              qrCode\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n      \"));\n\n          case 3:\n            response = _context.sent;\n            console.log(\"response: \", response);\n            return _context.abrupt(\"return\", response);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n  return _getBI.apply(this, arguments);\n}\n\nexport function getPermission() {\n  return _getPermission.apply(this, arguments);\n}\n\nfunction _getPermission() {\n  _getPermission = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _response$allDistrict, response;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return GraphQL.get(\"\\n        allDistricts {\\n          edges {\\n            node {\\n              id\\n            }\\n          }\\n        }\\n      \");\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response === null || response === void 0 ? void 0 : (_response$allDistrict = response.allDistricts) === null || _response$allDistrict === void 0 ? void 0 : _response$allDistrict.edges);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getPermission.apply(this, arguments);\n}\n\nexport function getMenus() {\n  return _getMenus.apply(this, arguments);\n}\n\nfunction _getMenus() {\n  _getMenus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var _resultResponse$allMe, resultResponse;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return GraphQL.get(\"\\n        allMenus {\\n          edges {\\n            node {\\n              id\\n              menu\\n              icon\\n              submenusSet {\\n                edges {\\n                  node {\\n                    id\\n                    submenu\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      \\n      \");\n\n          case 3:\n            resultResponse = _context3.sent;\n            console.log(\"Resultado: \", resultResponse);\n            return _context3.abrupt(\"return\", resultResponse === null || resultResponse === void 0 ? void 0 : (_resultResponse$allMe = resultResponse.allMenus) === null || _resultResponse$allMe === void 0 ? void 0 : _resultResponse$allMe.edges);\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 8]]);\n  }));\n  return _getMenus.apply(this, arguments);\n}\n\nexport function getPerson() {\n  return _getPerson.apply(this, arguments);\n}\n\nfunction _getPerson() {\n  _getPerson = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var _resultResponse$allMe2, resultResponse;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return GraphQL.get(\"\\n      allPerson{\\n        edges{\\n          node{\\n            id\\n            name\\n          }\\n        }\\n      }\\n      \\n      \");\n\n          case 3:\n            resultResponse = _context4.sent;\n            console.log(\"Resultado Pessoas: \", resultResponse);\n            return _context4.abrupt(\"return\", resultResponse === null || resultResponse === void 0 ? void 0 : (_resultResponse$allMe2 = resultResponse.allMenus) === null || _resultResponse$allMe2 === void 0 ? void 0 : _resultResponse$allMe2.edges);\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 8]]);\n  }));\n  return _getPerson.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/utils/graphQL/queries.ts"],"names":["GraphQL","getBI","id","get","response","console","log","getPermission","allDistricts","edges","getMenus","resultResponse","allMenus","getPerson"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,gBAAsBC,KAAtB;AAAA;AAAA;;;oEAAO,iBAAqBC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEyBF,OAAO,CAACG,GAAR,iCAEXD,EAFW,44BAFzB;;AAAA;AAEGE,YAAAA,QAFH;AA+CHC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AA/CG,6CAgDIA,QAhDJ;;AAAA;AAAA;AAAA;AAkDHC,YAAAA,OAAO,CAACC,GAAR;;AAlDG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqDP,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEyBP,OAAO,CAACG,GAAR,oIAFzB;;AAAA;AAEGC,YAAAA,QAFH;AAAA,8CAaIA,QAbJ,aAaIA,QAbJ,gDAaIA,QAAQ,CAAEI,YAbd,0DAaI,sBAAwBC,KAb5B;;AAAA;AAAA;AAAA;AAeHJ,YAAAA,OAAO,CAACC,GAAR;;AAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBP,gBAAsBI,QAAtB;AAAA;AAAA;;;uEAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE+BV,OAAO,CAACG,GAAR,8WAF/B;;AAAA;AAEGQ,YAAAA,cAFH;AAyBHN,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,cAA3B;AAzBG,8CA2BIA,cA3BJ,aA2BIA,cA3BJ,gDA2BIA,cAAc,CAAEC,QA3BpB,0DA2BI,sBAA0BH,KA3B9B;;AAAA;AAAA;AAAA;AA6BHJ,YAAAA,OAAO,CAACC,GAAR;;AA7BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiCP,gBAAsBO,SAAtB;AAAA;AAAA;;;wEAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE+Bb,OAAO,CAACG,GAAR,0IAF/B;;AAAA;AAEGQ,YAAAA,cAFH;AAgBHN,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,cAAnC;AAhBG,8CAkBIA,cAlBJ,aAkBIA,cAlBJ,iDAkBIA,cAAc,CAAEC,QAlBpB,2DAkBI,uBAA0BH,KAlB9B;;AAAA;AAAA;AAAA;AAoBHJ,YAAAA,OAAO,CAACC,GAAR;;AApBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import GraphQL from \"./index\";\r\n\r\nexport async function getBI(id: string) {\r\n  try {\r\n    const response: any = await GraphQL.get(\r\n      `\r\n     allPeople(id:\"${id}\") {\r\n    edges {\r\n      node {\r\n        id\r\n        tin\r\n        firstName\r\n        lastName\r\n        gender\r\n        birthDate\r\n        socialSecurityNumber\r\n        maritalState\r\n        fullName\r\n        identitycardsSet {\r\n          edges {\r\n            node {\r\n              id\r\n              fatherName\r\n              motherName\r\n              residenceAddress\r\n              residenceCountry\r\n              residenceProvince\r\n              residenceMunicipality\r\n              residenceCommune\r\n              residenceNeighbor\r\n              issuePlace\r\n              birthProvince\r\n              birthMunicipality\r\n              height\r\n              issueDate\r\n              issuePlace\r\n              validUntil\r\n              signature\r\n              cardImageFrontUrl\r\n              cardImageBackUrl\r\n              qrCode\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n      `\r\n    );\r\n    console.log(\"response: \", response);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport async function getPermission() {\r\n  try {\r\n    const response: any = await GraphQL.get(\r\n      `\r\n        allDistricts {\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      `\r\n    );\r\n    return response?.allDistricts?.edges;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function getMenus() {\r\n  try {\r\n    const resultResponse: any = await GraphQL.get(\r\n      `\r\n        allMenus {\r\n          edges {\r\n            node {\r\n              id\r\n              menu\r\n              icon\r\n              submenusSet {\r\n                edges {\r\n                  node {\r\n                    id\r\n                    submenu\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      \r\n      `\r\n    );\r\n\r\n    console.log(\"Resultado: \", resultResponse);\r\n\r\n    return resultResponse?.allMenus?.edges;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport async function getPerson() {\r\n  try {\r\n    const resultResponse: any = await GraphQL.get(\r\n      `\r\n      allPerson{\r\n        edges{\r\n          node{\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n      \r\n      `\r\n    );\r\n\r\n    console.log(\"Resultado Pessoas: \", resultResponse);\r\n\r\n    return resultResponse?.allMenus?.edges;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}