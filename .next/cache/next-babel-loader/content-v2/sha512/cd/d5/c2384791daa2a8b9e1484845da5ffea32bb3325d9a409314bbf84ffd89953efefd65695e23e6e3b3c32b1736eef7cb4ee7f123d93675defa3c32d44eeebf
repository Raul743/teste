{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/raul/Documentos/projctos/projectos_Snir/teste/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            query {\\n                \", \"\\n            }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nimport Client from './settings';\n\nvar GraphQL = /*#__PURE__*/function () {\n  function GraphQL() {\n    _classCallCheck(this, GraphQL);\n  }\n\n  _createClass(GraphQL, [{\n    key: \"get\",\n    value: function get(query) {\n      return new Promise(function (resolve, reject) {\n        Client.query({\n          query: gql(_templateObject(), query)\n        }).then(function (_ref) {\n          var data = _ref.data;\n          return resolve(data);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }]);\n\n  return GraphQL;\n}();\n\nexport default new GraphQL();","map":{"version":3,"sources":["/home/raul/Documentos/projctos/projectos_Snir/teste/utils/graphQL/index.ts"],"names":["gql","Client","GraphQL","query","Promise","resolve","reject","then","data","err"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,YAAnB;;IAGMC,O;;;;;;;wBACAC,K,EAAkB;AACpB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCL,QAAAA,MAAM,CAACE,KAAP,CAAa;AACXA,UAAAA,KAAK,EAAEH,GAAF,oBAEKG,KAFL;AADM,SAAb,EAOGI,IAPH,CAOQ;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBAAcH,OAAO,CAACG,IAAD,CAArB;AAAA,SAPR,WAQS,UAAAC,GAAG;AAAA,iBAAIH,MAAM,CAACG,GAAD,CAAV;AAAA,SARZ;AASD,OAVM,CAAP;AAWD;;;;;;AAGH,eAAe,IAAIP,OAAJ,EAAf","sourcesContent":["import { gql } from '@apollo/client';\r\nimport Client from './settings';\r\nimport { propQuery } from './types';\r\n\r\nclass GraphQL {\r\n  get(query: propQuery) {\r\n    return new Promise((resolve, reject) => {\r\n      Client.query({\r\n        query: gql`\r\n            query {\r\n                ${query}\r\n            }\r\n        `,\r\n      })\r\n        .then(({ data }) => resolve(data))\r\n        .catch(err => reject(err));\r\n    });\r\n  }\r\n}\r\n\r\nexport default new GraphQL();\r\n"]},"metadata":{},"sourceType":"module"}